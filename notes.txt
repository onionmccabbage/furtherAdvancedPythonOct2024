Further Advanced Python
=======================
October 14-18 2024

Toby Dussek

9:30  start
11:00 coffee
12:25 lunch until 1:30
3:00  tea break
4:30  end

repo https://github.com/onionmccabbage/furtherAdvancedPythonOct2024

Monday
> welcome
- we will be installing additional packages as needed
- conventions
  - as will all languages, identifiers can use letters, numbers and underscore (don't start with a number)
  - by convention, ClassesUsePascalCase, methodsUseCamelCase identifiers_use_snake_case
> design patterns - following proven good practices
> anti-patterns - when things go wrong and you do it again!!!
> Decorator pattern
> Factory pattern
> Facade pattern
- command pattern
- proxy pattern
> constructor pattern
> illustrate call to __repr__ (used in immediate Python also in Jupyter)
> after lunch review exercise
> immediate Python
> Abstract base class
- observables and subscribers
- we will need Jupyter Notebooks later in the week

Tuesday
- how to access the course recordings
- functional design
- RxPY https://rxpy.readthedocs.io/en/latest/index.html
       https://rxmarbles.com/
- concurrency and parallel code
- the GIL
  see https://realpython.com/python-gil/
- thread functions and thread classes
- thread locks/rlocks/semaphores
- semaphore quantity
- after lunch review exercise

Wednesday
- asyncio
- custom thread decorator to make classes and methods thread safe
- daemon threads, thread events
- multiprocessing
- performance and timing
- profiling with @profile and cProfile
- the 'with' operator
- after lunch review exercise
- why use a thread or a process
- generators
- prepare for Thursday

Thursday
- options for Jupyter Notebooks:
  - use Anaconda
  - pip install notebook
  - just use existing VSCode (or similar)
  - use cloud
- Python for Data Analysis
  we will need:
  - Jupyter notebooks
  - numpy
  - pandas
  - matplotlib
- using Jupyter notebooks
	The easiest way to get all the bits and bobs is to use Anaconda
  Data sources (csv, xlsx, text, db, url...)
   you can 'pip install jupyter' then start it with 'python -m notebook'
   then you will also need to pip install numpy, pandas etc.
- numpy and data structures: the arange and array 
- pandas: series and data-frame
  NaN, creating stuctures, analysis (stats)
- data cleansing and preparation
- descriptive statistics
- handling files and remote data
- after lunch review exercise
- careful: exporting a notebook does not add 'print' statements

Friday
- data vizualisation with matplotlib
- statistical analysis and correlation
  REMEMBER: correlation does NOT prove CAUSATION
- review of microservices (inc. multi threading)
- Flask:
  to run as a debug server: flask --app my_flask.py --debug run
  or else debug=True in the app declaration
  see https://flask.palletsprojects.com/en/2.3.x/
- after lunch review exercise
- end of course feedback
  

Some Websites
   https://www.geeksforgeeks.org/python-design-patterns/
   https://python-patterns.guide/
   https://rxpy.readthedocs.io/en/latest/ 
   https://pypi.org/project/memory-profiler/
   https://pynative.com/python-exercises-with-solutions/
   https://www.geeksforgeeks.org/python-exercises-practice-questions-and-solutions/
   https://www.practicepython.org/exercises/

